{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05D9\\u05DC \\u05D7\\u05E0\\u05D2\\u05E8\\\\Desktop\\\\React\\\\src\\\\components\\\\19.2-countries of the world\\\\fetch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport Input from \"./input19\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountriesApi = () => {\n  _s();\n\n  const [country, setCountry] = React.useState([]);\n  const [search, setSearch] = React.useState([]);\n  const [firstShow, setFirstShow] = React.useState(true);\n  useEffect(async () => {\n    let random = `https://restcountries.com/v2/all`;\n    let info = await (await fetch(random)).json();\n    let AllCountriesName = info.map(count => {\n      return count.name;\n    });\n    setCountry(AllCountriesName);\n  }, []);\n\n  const Changed = e => {\n    let bySearch = country.filter(name => {\n      return name.toLowerCase().includes(e.target.value.toLowerCase());\n    });\n    setSearch(bySearch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      inputChange: Changed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), search.map((count, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: count\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountriesApi, \"4Z4U8kzuk9kf9RXbvPQ/+hOz1Dk=\");\n\n_c = CountriesApi;\nexport default CountriesApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesApi\");","map":{"version":3,"sources":["C:/Users/אייל חנגר/Desktop/React/src/components/19.2-countries of the world/fetch.js"],"names":["React","useEffect","Input","CountriesApi","country","setCountry","useState","search","setSearch","firstShow","setFirstShow","random","info","fetch","json","AllCountriesName","map","count","name","Changed","e","bySearch","filter","toLowerCase","includes","target","value","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,WAAlB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,KAAK,CAACM,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACM,QAAN,CAAe,IAAf,CAAlC;AAEAL,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIU,MAAM,GAAI,kCAAd;AACA,QAAIC,IAAI,GAAI,MAAM,CAAC,MAAMC,KAAK,CAACF,MAAD,CAAZ,EAAsBG,IAAtB,EAAlB;AACA,QAAIC,gBAAgB,GAAGH,IAAI,CAACI,GAAL,CAASC,KAAK,IAAI;AACrC,aAAOA,KAAK,CAACC,IAAb;AACH,KAFsB,CAAvB;AAGAb,IAAAA,UAAU,CAACU,gBAAD,CAAV;AAGH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,OAAO,GAAIC,CAAD,IAAO;AACnB,QAAIC,QAAQ,GAAGjB,OAAO,CAACkB,MAAR,CAAeJ,IAAI,IAAI;AAClC,aAAOA,IAAI,CAACK,WAAL,GAAmBC,QAAnB,CAA4BJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeH,WAAf,EAA5B,CAAP;AACH,KAFc,CAAf;AAGAf,IAAAA,SAAS,CAACa,QAAD,CAAT;AACH,GALD;;AAMA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKZ,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQU,GAAR,KAAgB;AACxB,0BAAO;AAAA,+BACH;AAAA,oBAAeV;AAAf,WAASU,GAAT;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjCD;;GAAMxB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Input from \"./input19\";\r\n\r\nconst CountriesApi = () => {\r\n    const [country, setCountry] = React.useState([])\r\n    const [search, setSearch] = React.useState([])\r\n    const [firstShow, setFirstShow] = React.useState(true)\r\n\r\n    useEffect(async () => {\r\n        let random = `https://restcountries.com/v2/all`\r\n        let info = (await (await fetch(random)).json());\r\n        let AllCountriesName = info.map(count => {\r\n            return count.name\r\n        })\r\n        setCountry(AllCountriesName)\r\n\r\n\r\n    }, [])\r\n\r\n    const Changed = (e) => {\r\n        let bySearch = country.filter(name => {\r\n            return name.toLowerCase().includes(e.target.value.toLowerCase())\r\n        })\r\n        setSearch(bySearch)\r\n    }\r\n    return (\r\n        <div>\r\n            <Input inputChange={Changed} />\r\n\r\n            {search.map((count, idx) => {\r\n                return <ul>\r\n                    <li key={idx}>{count}</li>\r\n                </ul>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountriesApi"]},"metadata":{},"sourceType":"module"}