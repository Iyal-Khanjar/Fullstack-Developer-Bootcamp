{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05D9\\u05DC \\u05D7\\u05E0\\u05D2\\u05E8\\\\Desktop\\\\React\\\\src\\\\components\\\\17.1-crud_mini_project\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const date = () => {\n      axios.get(`https://jsonplaceholder.typicode.com/users`).then(res => {\n        // setTodoList((res.data).splice(0, 10))\n        setTodoList(res.data);\n        console.log(res.data);\n      });\n    };\n\n    date();\n  }, []);\n\n  const addName = e => {\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        addName(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(name => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/אייל חנגר/Desktop/React/src/components/17.1-crud_mini_project/index.js"],"names":["React","useEffect","useState","axios","Todo","todoList","setTodoList","date","get","then","res","data","console","log","addName","e","target","value","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,IAAI,GAAG,MAAM;AACfJ,MAAAA,KAAK,CAACK,GAAN,CAAW,4CAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACT;AACAJ,QAAAA,WAAW,CAAEI,GAAG,CAACC,IAAN,CAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACH,OALL;AAOH,KARD;;AASAJ,IAAAA,IAAI;AACP,GAXQ,EAWN,EAXM,CAAT;;AAYA,QAAMO,OAAO,GAAIC,CAAD,IAAO;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAaE,CAAC,CAACC,MAAF,CAASC,KAAtB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGF,CAAD,IAAO;AAAED,QAAAA,OAAO,CAACC,CAAD,CAAP;AAAY;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKV,QAAQ,CAACa,GAAT,CAAaC,IAAI,IAAI;AAClB,4BAAO;AAAA,oBAAKA,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;GAAMf,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Todo = () => {\r\n    const [todoList, setTodoList] = useState([])\r\n\r\n    useEffect(() => {\r\n        const date = () => {\r\n            axios.get(`https://jsonplaceholder.typicode.com/users`)\r\n                .then(res => {\r\n                    // setTodoList((res.data).splice(0, 10))\r\n                    setTodoList((res.data))\r\n                    console.log(res.data);\r\n                })\r\n\r\n        }\r\n        date()\r\n    }, [])\r\n    const addName = (e) => {\r\n        console.log((e.target.value));\r\n    }\r\n    return (\r\n        <div>\r\n            <input type='text' onChange={(e) => { addName(e) }} />\r\n            <ul>\r\n                {todoList.map(name => {\r\n                    return <li>{name.name}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}