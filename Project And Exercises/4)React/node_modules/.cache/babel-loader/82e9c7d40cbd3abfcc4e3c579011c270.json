{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05D9\\u05DC \\u05D7\\u05E0\\u05D2\\u05E8\\\\Desktop\\\\React\\\\src\\\\components\\\\13.1-data_massaging\\\\index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"John\",\n  birthday: \"1-1-1995\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"sausages\"],\n    fish: [\"salmon\", \"pike\"]\n  }\n}, {\n  name: \"Mark\",\n  birthday: \"10-5-1980\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"steak\", \"lamb\"],\n    fish: [\"tuna\", \"salmon\", \"barracuda\"]\n  }\n}, {\n  name: \"Mary\",\n  birthday: \"1-10-1977\",\n  favoriteFoods: {\n    meats: [\"ham\", \"chicken\"],\n    fish: [\"pike\"]\n  }\n}, {\n  name: \"Thomas\",\n  birthday: \"1-10-1990\",\n  favoriteFoods: {\n    meats: [\"bird\", \"rooster\"],\n    fish: [\"salmon\"]\n  }\n}, {\n  name: \"Johnny\",\n  birthday: \"1-10-1992\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"lamb\"],\n    fish: [\"anchovies\", \"tuna\"]\n  }\n}];\n\nclass Data extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: ''\n    };\n    this.x = data.forEach(function (born) {\n      let x = born.birthday.replace(/\\-/g, ' ').split(' ')[2];\n      if (x < 1990) return x;\n    });\n  }\n\n  render() {\n    const allNames = data.map(filteredPerson => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: filteredPerson.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [allNames, this.x]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Data;","map":{"version":3,"sources":["C:/Users/אייל חנגר/Desktop/React/src/components/13.1-data_massaging/index.js"],"names":["React","data","name","birthday","favoriteFoods","meats","fish","Data","Component","state","people","x","forEach","born","replace","split","render","allNames","map","filteredPerson"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAI,GAAG,CACT;AACIC,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,QAAQ,EAAE,UAFd;AAGIC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,UAAf,CADI;AAEXC,IAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,MAAX;AAFK;AAHnB,CADS,EAST;AACIJ,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,OAAf,EAAwB,MAAxB,CADI;AAEXC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AAFK;AAHnB,CATS,EAiBT;AACIJ,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,SAAR,CADI;AAEXC,IAAAA,IAAI,EAAE,CAAC,MAAD;AAFK;AAHnB,CAjBS,EAyBT;AACIJ,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,SAAT,CADI;AAEXC,IAAAA,IAAI,EAAE,CAAC,QAAD;AAFK;AAHnB,CAzBS,EAiCT;AACIJ,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,QAAQ,EAAE,WAFd;AAGIC,EAAAA,aAAa,EAAE;AACXC,IAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,MAAf,CADI;AAEXC,IAAAA,IAAI,EAAE,CAAC,WAAD,EAAc,MAAd;AAFK;AAHnB,CAjCS,CAAb;;AA2CA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADuB;AAAA,SAE/BC,CAF+B,GAE3BV,IAAI,CAACW,OAAL,CAAa,UAAUC,IAAV,EAAgB;AAC7B,UAAIF,CAAC,GAAGE,IAAI,CAACV,QAAL,CAAcW,OAAd,CAAsB,KAAtB,EAA6B,GAA7B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAAR;AACA,UAAIJ,CAAC,GAAG,IAAR,EACI,OAAOA,CAAP;AACP,KAJG,CAF2B;AAAA;;AAQ/BK,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAGhB,IAAI,CAACiB,GAAL,CAASC,cAAc,iBACpC;AAAA,gBACKA,cAAc,CAACjB;AADpB;AAAA;AAAA;AAAA;AAAA,YADa,CAAjB;AAMA,wBACI;AAAA,iBACKe,QADL,EAEK,KAAKN,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AArB8B;;AAwBnC,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst data = [\r\n    {\r\n        name: \"John\",\r\n        birthday: \"1-1-1995\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"sausages\"],\r\n            fish: [\"salmon\", \"pike\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Mark\",\r\n        birthday: \"10-5-1980\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"steak\", \"lamb\"],\r\n            fish: [\"tuna\", \"salmon\", \"barracuda\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Mary\",\r\n        birthday: \"1-10-1977\",\r\n        favoriteFoods: {\r\n            meats: [\"ham\", \"chicken\"],\r\n            fish: [\"pike\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Thomas\",\r\n        birthday: \"1-10-1990\",\r\n        favoriteFoods: {\r\n            meats: [\"bird\", \"rooster\"],\r\n            fish: [\"salmon\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Johnny\",\r\n        birthday: \"1-10-1992\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"lamb\"],\r\n            fish: [\"anchovies\", \"tuna\"],\r\n        },\r\n    },\r\n];\r\n\r\nclass Data extends React.Component {\r\n    state = { people: '' }\r\n    x = data.forEach(function (born) {\r\n        let x = born.birthday.replace(/\\-/g, ' ').split(' ')[2]\r\n        if (x < 1990)\r\n            return x\r\n    })\r\n\r\n    render() {\r\n        const allNames = data.map(filteredPerson => (\r\n            <li>\r\n                {filteredPerson.name}\r\n            </li>\r\n        ))\r\n\r\n        return (\r\n            <div>\r\n                {allNames}\r\n                {this.x}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data"]},"metadata":{},"sourceType":"module"}