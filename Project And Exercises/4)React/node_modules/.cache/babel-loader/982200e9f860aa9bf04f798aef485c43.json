{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05D9\\u05DC \\u05D7\\u05E0\\u05D2\\u05E8\\\\Desktop\\\\React\\\\src\\\\components\\\\13.1-data_massaging\\\\index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"John\",\n  birthday: \"1-1-1995\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"sausages\"],\n    fish: [\"salmon\", \"pike\"]\n  }\n}, {\n  name: \"Mark\",\n  birthday: \"10-5-1980\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"steak\", \"lamb\"],\n    fish: [\"tuna\", \"salmon\", \"barracuda\"]\n  }\n}, {\n  name: \"Mary\",\n  birthday: \"1-10-1977\",\n  favoriteFoods: {\n    meats: [\"ham\", \"chicken\"],\n    fish: [\"pike\"]\n  }\n}, {\n  name: \"Thomas\",\n  birthday: \"1-10-1990\",\n  favoriteFoods: {\n    meats: [\"bird\", \"rooster\"],\n    fish: [\"salmon\"]\n  }\n}, {\n  name: \"Johnny\",\n  birthday: \"1-10-1992\",\n  favoriteFoods: {\n    meats: [\"hamburgers\", \"lamb\"],\n    fish: [\"anchovies\", \"tuna\"]\n  }\n}];\n\nclass Data extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: []\n    };\n  }\n\n  componentDidMount() {\n    const propleOlder1990 = data.filter(person => {\n      if (person.birthday.split('-')[2] < 1990) return person;\n    });\n    this.setState({\n      people: propleOlder1990\n    });\n  }\n\n  render() {\n    const question1 = data.map(filteredPerson => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: filteredPerson.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 55\n    }, this));\n    const question2 = this.state.people.map(person => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [person.name, person.birthday, person.favoriteFoods.meats.map(meatsFood => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: meatsFood\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 36\n            }, this);\n          }), person.favoriteFoods.fish.map(fishFood => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: fishFood\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [question1, question2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Data;","map":{"version":3,"sources":["C:/Users/אייל חנגר/Desktop/React/src/components/13.1-data_massaging/index.js"],"names":["React","data","name","birthday","favoriteFoods","meats","fish","Data","Component","state","people","componentDidMount","propleOlder1990","filter","person","split","setState","render","question1","map","filteredPerson","question2","meatsFood","fishFood"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst data = [\r\n    {\r\n        name: \"John\",\r\n        birthday: \"1-1-1995\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"sausages\"],\r\n            fish: [\"salmon\", \"pike\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Mark\",\r\n        birthday: \"10-5-1980\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"steak\", \"lamb\"],\r\n            fish: [\"tuna\", \"salmon\", \"barracuda\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Mary\",\r\n        birthday: \"1-10-1977\",\r\n        favoriteFoods: {\r\n            meats: [\"ham\", \"chicken\"],\r\n            fish: [\"pike\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Thomas\",\r\n        birthday: \"1-10-1990\",\r\n        favoriteFoods: {\r\n            meats: [\"bird\", \"rooster\"],\r\n            fish: [\"salmon\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"Johnny\",\r\n        birthday: \"1-10-1992\",\r\n        favoriteFoods: {\r\n            meats: [\"hamburgers\", \"lamb\"],\r\n            fish: [\"anchovies\", \"tuna\"],\r\n        },\r\n    },\r\n];\r\n\r\nclass Data extends React.Component {\r\n    state = { people: [] }\r\n\r\n\r\n    componentDidMount() {\r\n        const propleOlder1990 = data.filter(person => {\r\n            if (person.birthday.split('-')[2] < 1990)\r\n                return person;\r\n        })\r\n        this.setState({ people: propleOlder1990 });\r\n    }\r\n    render() {\r\n        const question1 = data.map(filteredPerson => (<li>{filteredPerson.name}</li>))\r\n\r\n        const question2 =\r\n            this.state.people.map(person => {\r\n                return <div>\r\n                    <li>\r\n                        {person.name}\r\n                        {person.birthday}\r\n                        {person.favoriteFoods.meats.map(meatsFood => {\r\n                            return <p>{meatsFood}</p>\r\n                        })}\r\n                        {person.favoriteFoods.fish.map(fishFood => {\r\n                            return <p>{fishFood}</p>\r\n                        })}\r\n                    </li>\r\n                </div>\r\n            })\r\n\r\n\r\n        return (\r\n            <div>\r\n                {question1}\r\n                {question2}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data"]},"metadata":{},"sourceType":"module"}