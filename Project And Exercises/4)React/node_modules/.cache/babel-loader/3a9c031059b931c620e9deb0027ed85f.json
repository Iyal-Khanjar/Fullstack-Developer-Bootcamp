{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05D9\\u05DC \\u05D7\\u05E0\\u05D2\\u05E8\\\\Desktop\\\\React\\\\src\\\\components\\\\18.2-simple todo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './style.css'; // import Input from \"./input\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [check, setCheck] = React.useState([{\n    name: \"CSS\",\n    completed: true\n  }, {\n    name: \"JavaScript\",\n    completed: true\n  }, {\n    name: \"Learn React\",\n    completed: false\n  }, {\n    name: \"Learn mongoDB\",\n    completed: false\n  }, {\n    name: \"Learn Node JS\",\n    completed: false\n  }]);\n\n  const Clicked = e => {\n    let newCheck = [...check];\n    newCheck[e.target.id].completed = !newCheck[e.target.id].completed;\n    setCheck(newCheck);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      textAlign: 'center'\n    },\n    children: check.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: item.completed ? 'lineThrough' : 'none',\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          id: index,\n          type: \"button\",\n          value: item.completed ? '✓' : 'X',\n          onClick: Clicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 102\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"Gm0pozKM8Zg3CSQPcC/bvKXDipo=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/אייל חנגר/Desktop/React/src/components/18.2-simple todo/index.js"],"names":["React","Todo","check","setCheck","useState","name","completed","Clicked","e","newCheck","target","id","textAlign","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CACA;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACI,QAAN,CACrB,CACG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GADH,EAEG;AAAED,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,SAAS,EAAE;AAAjC,GAFH,EAGG;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,SAAS,EAAE;AAAlC,GAHH,EAIG;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAJH,EAKG;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GALH,CADqB,CAA1B;;AAQA,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACnB,QAAIC,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAf;AACAO,IAAAA,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAR,CAAsBL,SAAtB,GAAkC,CAACG,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,CAAR,CAAsBL,SAAzD;AACAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AAEH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA,cACKV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,0BAAO;AAAe,QAAA,SAAS,EAAED,IAAI,CAACR,SAAL,GAAiB,aAAjB,GAAiC,MAA3D;AAAA,mBAAoEQ,IAAI,CAACT,IAAzE,eAA8E;AAAO,UAAA,EAAE,EAAEU,KAAX;AAAkB,UAAA,IAAI,EAAC,QAAvB;AAAgC,UAAA,KAAK,EAAED,IAAI,CAACR,SAAL,GAAiB,GAAjB,GAAuB,GAA9D;AAAmE,UAAA,OAAO,EAAEC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAA9E;AAAA,SAAQQ,KAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtBD;;GAAMd,I;;KAAAA,I;AAuBN,eAAeA,IAAf","sourcesContent":["import React from \"react\"\r\nimport './style.css'\r\n// import Input from \"./input\"\r\nconst Todo = () => {\r\n    const [check, setCheck] = React.useState\r\n        ([\r\n            { name: \"CSS\", completed: true },\r\n            { name: \"JavaScript\", completed: true },\r\n            { name: \"Learn React\", completed: false },\r\n            { name: \"Learn mongoDB\", completed: false },\r\n            { name: \"Learn Node JS\", completed: false },\r\n        ])\r\n    const Clicked = (e) => {\r\n        let newCheck = [...check]\r\n        newCheck[e.target.id].completed = !newCheck[e.target.id].completed\r\n        setCheck(newCheck)\r\n\r\n    }\r\n    return (\r\n        <div className='container' style={{ textAlign: 'center' }}>\r\n            {check.map((item, index) => {\r\n                return <p key={index} className={item.completed ? 'lineThrough' : 'none'}>{item.name}<input id={index} type='button' value={item.completed ? '✓' : 'X'} onClick={Clicked} /></p>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}